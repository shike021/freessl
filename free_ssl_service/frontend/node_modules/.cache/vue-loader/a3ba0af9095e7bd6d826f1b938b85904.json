{"remainingRequest":"/root/work/freessl/free_ssl_service/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/work/freessl/free_ssl_service/frontend/src/views/Certificates/Detail.vue?vue&type=style&index=0&id=a1aba04c&scoped=true&lang=css","dependencies":[{"path":"/root/work/freessl/free_ssl_service/frontend/src/views/Certificates/Detail.vue","mtime":1744469277334},{"path":"/root/work/freessl/free_ssl_service/frontend/node_modules/css-loader/dist/cjs.js","mtime":1744473453671},{"path":"/root/work/freessl/free_ssl_service/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1744473443888},{"path":"/root/work/freessl/free_ssl_service/frontend/node_modules/postcss-loader/src/index.js","mtime":1744473453093},{"path":"/root/work/freessl/free_ssl_service/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1744473453885},{"path":"/root/work/freessl/free_ssl_service/frontend/node_modules/vue-loader/lib/index.js","mtime":1744473443223}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jZXJ0aWZpY2F0ZS1kZXRhaWwgewogIHBhZGRpbmc6IDIwcHg7Cn0KCi5tYi0yMCB7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKLm10LTIwIHsKICBtYXJnaW4tdG9wOiAyMHB4Owp9CgoudGV4dC1kYW5nZXIgewogIGNvbG9yOiAjZjU2YzZjOwp9Cg=="},{"version":3,"sources":["Detail.vue"],"names":[],"mappings":";AAkHA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Detail.vue","sourceRoot":"src/views/Certificates","sourcesContent":["<template>\n  <div class=\"certificate-detail\">\n    <el-card>\n      <h2>证书详情</h2>\n      \n      <el-row :gutter=\"20\" class=\"mb-20\">\n        <el-col :span=\"8\">域名:</el-col>\n        <el-col :span=\"16\">{{ certificate.domains }}</el-col>\n      </el-row>\n      \n      <el-row :gutter=\"20\" class=\"mb-20\">\n        <el-col :span=\"8\">申请日期:</el-col>\n        <el-col :span=\"16\">{{ formatDate(certificate.issue_date) }}</el-col>\n      </el-row>\n      \n      <el-row :gutter=\"20\" class=\"mb-20\">\n        <el-col :span=\"8\">过期日期:</el-col>\n        <el-col :span=\"16\">\n          <span :class=\"{'text-danger': isExpired(certificate.expiry_date)}\">\n            {{ formatDate(certificate.expiry_date) }}\n          </span>\n        </el-col>\n      </el-row>\n      \n      <el-row :gutter=\"20\" class=\"mb-20\">\n        <el-col :span=\"8\">状态:</el-col>\n        <el-col :span=\"16\">\n          <el-tag\n            :type=\"getStatusType(certificate.status)\"\n            size=\"small\"\n          >\n            {{ certificate.status === 'active' ? '有效' : '已过期' }}\n          </el-tag>\n        </el-col>\n      </el-row>\n      \n      <el-row :gutter=\"20\" class=\"mb-20\" v-if=\"certificate.can_renew\">\n        <el-col :span=\"24\">\n          <el-button type=\"primary\" @click=\"renewCertificate\">\n            续期证书\n          </el-button>\n        </el-col>\n      </el-row>\n      \n      <el-tabs v-model=\"activeTab\" class=\"mt-20\">\n        <el-tab-pane label=\"证书\" name=\"certificate\">\n          <pre>{{ certificate.certificate }}</pre>\n        </el-tab-pane>\n        <el-tab-pane label=\"私钥\" name=\"privateKey\">\n          <pre>{{ certificate.private_key }}</pre>\n        </el-tab-pane>\n        <el-tab-pane label=\"链\" name=\"chain\">\n          <pre>{{ certificate.chain }}</pre>\n        </el-tab-pane>\n      </el-tabs>\n    </el-card>\n  </div>\n</template>\n<script>\nimport { mapActions } from 'vuex'\n\nexport default {\n  data() {\n    return {\n      certificate: {},\n      activeTab: 'certificate',\n      loading: false\n    }\n  },\n  created() {\n    this.loadCertificate()\n  },\n  methods: {\n    ...mapActions('certs', ['fetchCertificate', 'renew']),\n    \n    async loadCertificate() {\n      this.loading = true\n      try {\n        const certId = this.$route.params.id\n        const response = await this.fetchCertificate(certId)\n        this.certificate = response.data\n      } catch (error) {\n        this.$message.error('加载证书失败: ' + (error.response?.data?.message || error.message))\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    async renewCertificate() {\n      try {\n        const certId = this.$route.params.id\n        await this.renew({ id: certId })\n        this.$message.success('证书续期成功')\n        this.loadCertificate()\n      } catch (error) {\n        this.$message.error('续期失败: ' + (error.response?.data?.message || error.message))\n      }\n    },\n    \n    formatDate(date) {\n      return new Date(date).toLocaleDateString()\n    },\n    \n    isExpired(expiryDate) {\n      return new Date(expiryDate) < new Date()\n    },\n    \n    getStatusType(status) {\n      return status === 'active' ? 'success' : 'danger'\n    }\n  }\n}\n</script>\n<style scoped>\n.certificate-detail {\n  padding: 20px;\n}\n\n.mb-20 {\n  margin-bottom: 20px;\n}\n\n.mt-20 {\n  margin-top: 20px;\n}\n\n.text-danger {\n  color: #f56c6c;\n}\n</style>\n"]}]}